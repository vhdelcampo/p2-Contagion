@{
    ViewData["Title"] = "Home Page";
}

@model List<UserModel>;

<head>
  <style>
    /* Set the size of the div element that contains the map */
    #map {
      height: 400px;
      /* The height is 400 pixels */
      width: 100%;
      /* The width is the width of the web page */
    }
  </style>
</head>

<h3>My Google Maps Demo</h3>

<a href="home/users">Users</a>
<a href="home/getlocation">Get Current Location</a>

<!--The div element for the map -->
<div id="map"></div>

<script type="text/javascript">
  // Initialize and add the map
  function initMap() {
    // The location of Liv Apartment, Arlington.
    var arlington1 = { lat: 32.7286784, lng: -97.1046912 };
    // The map, centered at Arlington
    var bounds = new google.maps.LatLngBounds();
    var mapOptions = {
    mapTypeId: 'roadmap'
    };
    var map = new google.maps.Map(
      document.getElementById('map'), { zoom: 15, center: arlington1 });
    // The marker, positioned at Arlington
    var markers = [
      [32.7286784, -97.1046912], 
      [32.7266784, -97.1046912],
      [32.7266784, -97.0846912],
      [32.7286784, -97.0846912],
      [31.7286784, -97.0846912],
      [32.7286784, -97],
      [32.7286784, -98],
      [32, -97.0846912],
      [33, -97.0846912],
      [33, 97]                  
    ];
    
    
    foreach(var item in @Model.Count) {
      var position = new google.maps.LatLng(item.Lat, item.Long)
      
      bounds.extend(position);
      marker = new google.maps.Marker({
          position: position,
          map: map
      });
    }
    
    // for(i = 0; i < '@(Model.Count)'; i++) {
    //   // var position = new google.maps.LatLng(markers[i][0], markers[i][1]);
    //   var position = new google.maps.LatLng('@(Model['i'].Lat)', '@Model['i'].Long')
      
    //   bounds.extend(position);
    //   marker = new google.maps.Marker({
    //       position: position,
    //       map: map
    //   });
      
    // }

    var noPoi = [
      {
        featureType: "poi",
        stylers: [
          { visibility: "off" }
        ]
      }
    ];

    map.setOptions({ styles: noPoi });
    map.fitBounds(bounds);
  }};
</script>
<!--Load the API from the specified URL
  * The async attribute allows the browser to render the page while the API loads
  * The key parameter will contain your own API key (which is not needed for this tutorial)
  * The callback parameter executes the initMap() function
  -->
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCd8-6YXmDwESXdgRmwWLrbiNFLwLdKYIc&callback=initMap">
</script>
